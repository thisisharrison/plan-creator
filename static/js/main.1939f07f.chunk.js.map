{"version":3,"sources":["utils.js","components/Editor/Editor.js","components/Plan/PlanIndex.js","components/App.js","index.js"],"names":["isValidJson","string","a","JSON","parse","obj","Array","isArray","Promise","reject","Error","find","plan","every","Object","keys","key","Editor","initialInput","onSubmit","React","useState","formState","setFormState","error","setError","handleSubmit","event","preventDefault","message","className","htmlFor","id","type","role","onChange","currentTarget","value","rows","cols","onClick","PlanIndex","plans","sortedPlans","sort","b","price","headers","map","scope","name","body","filter","primary","feature","includes","title","priceCheckbox","e","currency","duration","App","setPlans","selection","setSelection","json","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1939f07f.chunk.js","sourcesContent":["export function prettify(string) {\n  const object = JSON.parse(string);\n  const prettied = JSON.stringify(object, undefined, 4);\n  return prettied;\n}\n\nexport function jsonIfy(string) {\n  return JSON.parse(JSON.stringify(string));\n}\n\nexport async function isValidJson(string) {\n  if (typeof JSON.parse(string) === 'object') {\n    const obj = JSON.parse(string);\n    // check if object is in array structure\n    if (!Array.isArray(obj)) {\n      return Promise.reject(new Error('Wrap object in array'));\n    }\n    // check if missing primary\n    if (!obj.find(plan => plan['primary'])) {\n      return Promise.reject(new Error('No primary plan'));\n    }\n    // check if missing price\n    if (!obj.every(plan => typeof plan['price'] === 'number')) {\n      return Promise.reject(new Error('Missing or incorrect price'));\n    }\n    // check if non-boolean values in feature\n    const nonBoolean = obj.every(plan => {\n      return Object.keys(plan).every(key => {\n        if (key === 'name' || key === 'price' || key === 'currency' || key === 'duration') {\n          return true;\n        } else {\n          return typeof plan[key] === 'boolean';\n        }\n      });\n    });\n    if (!nonBoolean) {\n      return Promise.reject(new Error('Plan feature value must be boolean'));\n    }\n    // check if plan has currency and duration\n    const currencyDuration = obj.every(plan => {\n      return 'currency' in plan && 'duration' in plan;\n    });\n    if (!currencyDuration) {\n      return Promise.reject(new Error('Plans need currency and duration'));\n    }\n    return string;\n  }\n  return Promise.reject(new Error('Not a valid string'));\n}\n\nexport const initialInputReal = `\n[{\n  \"name\": \"premium\",\n  \"primary\": true,\n  \"general\": true,\n  \"dental\": true,\n  \"specialist\": true,\n  \"physiotherapy\": true,\n  \"chinese medicine\": true,\n  \"price\": 388,\n  \"currency\": \"HK$\",\n  \"duration\": \"month\"\n},\n{\n  \"name\": \"standard\",\n  \"general\": true,\n  \"dental\": true,\n  \"price\": 0,\n  \"currency\": \"HK$\",\n  \"duration\": \"month\"\n}]\n`;\n\nexport const initialInput = `\n[{\n  \"name\": \"standard\",\n  \"general\": true,\n  \"price\": 0,\n  \"currency\": \"HK$\",\n  \"duration\": \"month\"\n},\n{\n  \"name\": \"premium\",\n  \"primary\": true,\n  \"general\": true,\n  \"specialist\": true,\n  \"physiotherapy\": true,\n  \"price\": 388,\n  \"currency\": \"HK$\",\n  \"duration\": \"month\"\n}]\n`;\n","import React from 'react';\nimport {isValidJson} from '../../utils';\n\nfunction Editor({initialInput, onSubmit}) {\n  const [formState, setFormState] = React.useState(initialInput);\n  const [error, setError] = React.useState({});\n\n  const handleChange = event => {\n    setFormState(event.currentTarget.value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const string = await isValidJson(formState);\n      onSubmit(string);\n      if (error.message) {\n        setError({});\n      }\n    } catch (err) {\n      setError(err);\n    }\n  };\n\n  const handleReset = () => {\n    setError({});\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"editor\">\n          Input\n          <br />\n          <textarea\n            id=\"editor\"\n            type=\"text\"\n            role=\"textbox\"\n            onChange={handleChange}\n            value={formState}\n            rows=\"20\"\n            cols=\"40\"\n          />\n        </label>\n        {error.message && <small role=\"alert\">{error.message}</small>}\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Submit\n      </button>\n      {error.message && (\n        <button type=\"button\" className=\"btn btn-secondary\" onClick={handleReset}>\n          Reset\n        </button>\n      )}\n    </form>\n  );\n}\n\nexport default Editor;\n","import React from 'react';\n\nexport default function PlanIndex({plans, onClick}) {\n  const sortedPlans = JSON.parse(plans).sort((a, b) => a.price - b.price);\n\n  const headers = sortedPlans.map(plan => {\n    return (\n      <th scope=\"col\" key={plan.name}>\n        {plan.name}\n      </th>\n    );\n  });\n\n  const features = Object.keys(JSON.parse(plans).filter(plan => plan.primary)[0]);\n\n  const body = features.map(feature => {\n    if (['name', 'primary', 'price', 'currency', 'duration'].includes(feature)) return null;\n    return (\n      <tr key={feature}>\n        <th scope=\"row\">{feature}</th>\n        {sortedPlans.map(plan => (\n          <td\n            title={`${plan.name}-${feature}-${plan[feature] ? 'true' : 'false'}`}\n            key={`${plan.name}-${feature}`}\n          >\n            {plan[feature] ? '✅' : '❌'}\n          </td>\n        ))}\n      </tr>\n    );\n  });\n\n  const priceCheckbox = (\n    <tr>\n      <th scope=\"row\"></th>\n      {sortedPlans.map(plan => (\n        <td key={`${plan.name}-price`} title={`${plan.name}-price`}>\n          <label htmlFor={`${plan.name}-price`}>\n            <input\n              type=\"radio\"\n              name=\"select-plan\"\n              value={plan.name}\n              id={`${plan.name}-price`}\n              onClick={e => onClick(e.currentTarget.value)}\n            />\n            {plan.currency + ' ' + plan.price}{' '}\n            <span className=\"plan-duration\">{plan.duration}</span>\n          </label>\n        </td>\n      ))}\n    </tr>\n  );\n\n  return (\n    <>\n      <table className=\"table table-borderless\">\n        <thead>\n          <tr>\n            <th scope=\"col\"></th>\n            {headers}\n          </tr>\n        </thead>\n        <tbody>\n          {body}\n          {priceCheckbox}\n        </tbody>\n      </table>\n      {/* uncomment to debug */}\n      {/* <pre>{prettify(plans)}</pre> */}\n    </>\n  );\n}\n","import React from 'react';\nimport Editor from './Editor/Editor';\nimport PlanIndex from './Plan/PlanIndex';\nimport {initialInput} from '../utils';\n\nimport './App.scss';\n\nfunction App() {\n  const [plans, setPlans] = React.useState(initialInput);\n  const [selection, setSelection] = React.useState(null);\n\n  const onSubmit = json => {\n    setPlans(json);\n  };\n\n  const onClick = plan => {\n    setSelection(plan);\n  };\n\n  return (\n    <div>\n      <header>\n        <h1>Plan Creator</h1>\n      </header>\n      <main>\n        <Editor initialInput={plans} onSubmit={onSubmit} />\n        <div>\n          <label>Choose a plan</label>\n          <br />\n          {selection ? (\n            <p>\n              You have selected the <span className=\"selected-plan\">{selection}</span> plan!\n            </p>\n          ) : null}\n          {plans ? <PlanIndex plans={plans} onClick={onClick} /> : null}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}